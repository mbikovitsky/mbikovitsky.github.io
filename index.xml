<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Biko&#39;s House of Horrors</title>
    <link>https://bikodbg.com/</link>
    <description>Recent content on Biko&#39;s House of Horrors</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2021 — Michael Bikovitsky — CC BY-SA 4.0.</copyright>
    <lastBuildDate>Sun, 31 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bikodbg.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shabak Challenge 2021: ForceCoin</title>
      <link>https://bikodbg.com/blog/2021/01/force-coin/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bikodbg.com/blog/2021/01/force-coin/</guid>
      <description>This is part of my series of writeups on the Shabak 2021 CTF challenges. See the complete collection here.
Introduction The challenge description reads:
 Our agent from the field has obtained a few files related to a program that is used by a terrorist organization!
This zip contains the program and a db file.
We need your help parsing the db!
Give it your best, we heard that they use it and that it might contain some intresting information for you!</description>
    </item>
    
    <item>
      <title>Shabak Challenge 2021: Recall</title>
      <link>https://bikodbg.com/blog/2021/01/recall/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bikodbg.com/blog/2021/01/recall/</guid>
      <description>Update 2021-01-31: Archive moved to the Internet Archive.
This is part of my series of writeups on the Shabak 2021 CTF challenges. See the complete collection here.
Introduction The challenge description reads:
 Feel free to run your binary and use our tracer-call® services!
We made sure you won&amp;rsquo;t be able to read the flag anyway ;)
 Well, that&amp;rsquo;s not very much to go on, is it? At least we don&amp;rsquo;t have a lot of code files to look at, so that&amp;rsquo;s something.</description>
    </item>
    
    <item>
      <title>Shabak Challenge 2021: NFC</title>
      <link>https://bikodbg.com/blog/2021/01/nfc/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bikodbg.com/blog/2021/01/nfc/</guid>
      <description>Update 2021-01-31: Archive moved to the Internet Archive.
This is part of my series of writeups on the Shabak 2021 CTF challenges. See the complete collection here.
Introduction The challenge description reads:
 Our target adopted a new way to keep sensitive information! They use secure NFC tags to keep secure and confidential information inside them.
We managed to place a strong NFC reader near our target&amp;rsquo;s secret NFC tag. Now we want to communicate with the that tag and extract the secret information from it.</description>
    </item>
    
    <item>
      <title>Shabak Challenge 2021: BabyRISC</title>
      <link>https://bikodbg.com/blog/2021/01/baby-risc/</link>
      <pubDate>Mon, 25 Jan 2021 12:54:00 +0200</pubDate>
      
      <guid>https://bikodbg.com/blog/2021/01/baby-risc/</guid>
      <description>Update 2021-01-31: Archive moved to the Internet Archive.
This is part of my series of writeups on the Shabak 2021 CTF challenges. See the complete collection here.
Introduction The challenge description reads:
 Following ARM&amp;rsquo;s success, I went ahead and designed my own RISC assembly language.
I wrote a simulator, so you&amp;rsquo;ll be able to run your own programs and enjoy the (very) reduced instruction set!
Of course, with such minimal implementation, reading the flag is impossible.</description>
    </item>
    
    <item>
      <title>Shabak Challenge 2021</title>
      <link>https://bikodbg.com/blog/2021/01/unseen-shield/</link>
      <pubDate>Mon, 25 Jan 2021 12:53:00 +0200</pubDate>
      
      <guid>https://bikodbg.com/blog/2021/01/unseen-shield/</guid>
      <description>Update 2021-01-31: Archive moved to the Internet Archive.
In January of 2021, the Shabak (the Israel Security Agency) published a set of CTF challenges at shabakchallenge.com. The original website may be gone now, but I downloaded what I could and uploaded it to the Internet Archive.
For your amusement, I also present writeups on some of the challenges I solved. They will be linked here as soon as they are published.</description>
    </item>
    
    <item>
      <title>Crash to Zork</title>
      <link>https://bikodbg.com/blog/2020/05/crash-to-zork/</link>
      <pubDate>Sat, 02 May 2020 19:36:27 +0300</pubDate>
      
      <guid>https://bikodbg.com/blog/2020/05/crash-to-zork/</guid>
      <description>Some years ago, when I was just getting into Windows kernel development, I stumbled upon an unusual function: DbgPrompt. Somewhere, some driver developer needed the ability to read input from the currently attached kernel debugger, and so this function was added to the kernel&amp;rsquo;s public API. For me, it sparked an idea: if a driver can read text from- and write text to-, the attached debugger, why not use it to play a little game?</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://bikodbg.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bikodbg.com/about/</guid>
      <description>Powered by Hugo. Theme is Simple Hugo Theme.

All content on this website, unless stated otherwise, is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</description>
    </item>
    
  </channel>
</rss>
